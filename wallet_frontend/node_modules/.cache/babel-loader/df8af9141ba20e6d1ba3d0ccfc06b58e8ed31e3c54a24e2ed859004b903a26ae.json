{"ast":null,"code":"import React, { useState } from 'react';\nimport { CssVarsProvider, useColorScheme } from '@mui/joy/styles';\nimport Sheet from '@mui/joy/Sheet';\nimport Typography from '@mui/joy/Typography';\nimport FormControl from '@mui/joy/FormControl';\nimport FormLabel from '@mui/joy/FormLabel';\nimport Input from '@mui/joy/Input';\nimport Button from '@mui/joy/Button';\nimport Link from '@mui/joy/Link';\nimport Cookies from 'js-cookie';\nexport const setCookieAfterLogin = () => {\n  const loginDate = new Date().toISOString(); // Get the current date in ISO format\n  Cookies.set('loginDate', loginDate, {\n    expires: 7\n  }); // Cookie will expire in 7 days\n};\nexport const isCookieExpired = cookieName => {\n  const cookieValue = Cookies.get(cookieName);\n  if (!cookieValue) {\n    // wywolaj funkcje logout\n    return true;\n  }\n  const cookieDate = new Date(cookieValue);\n  const now = new Date();\n  const diffMilliseconds = now - cookieDate;\n  const diffHours = diffMilliseconds / (1000 * 60 * 60);\n  if (diffHours > 1) {\n    // wywolaj funkcje logout\n  }\n};","map":{"version":3,"names":["React","useState","CssVarsProvider","useColorScheme","Sheet","Typography","FormControl","FormLabel","Input","Button","Link","Cookies","setCookieAfterLogin","loginDate","Date","toISOString","set","expires","isCookieExpired","cookieName","cookieValue","get","cookieDate","now","diffMilliseconds","diffHours"],"sources":["C:/Users/Bebe/Documents/GitHub/wallet_project/wallet_frontend/src/Test.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { CssVarsProvider, useColorScheme } from '@mui/joy/styles';\nimport Sheet from '@mui/joy/Sheet';\nimport Typography from '@mui/joy/Typography';\nimport FormControl from '@mui/joy/FormControl';\nimport FormLabel from '@mui/joy/FormLabel';\nimport Input from '@mui/joy/Input';\nimport Button from '@mui/joy/Button';\nimport Link from '@mui/joy/Link';\nimport Cookies from 'js-cookie';\nexport const setCookieAfterLogin = () => {\n    const loginDate = new Date().toISOString(); // Get the current date in ISO format\n    Cookies.set('loginDate', loginDate, { expires: 7 }); // Cookie will expire in 7 days\n};\nexport const isCookieExpired = (cookieName) => {\n    const cookieValue = Cookies.get(cookieName);\n\n    if (!cookieValue) {\n        // wywolaj funkcje logout\n        return true;\n    }\n\n    const cookieDate = new Date(cookieValue);\n    const now = new Date();\n\n    const diffMilliseconds = now - cookieDate;\n\n    const diffHours = diffMilliseconds / (1000 * 60 * 60);\n\n    if (diffHours > 1){\n        // wywolaj funkcje logout\n    }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,eAAe,EAAEC,cAAc,QAAQ,iBAAiB;AACjE,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAOC,UAAU,MAAM,qBAAqB;AAC5C,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAOC,IAAI,MAAM,eAAe;AAChC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAO,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EACrC,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC,CAAC;EAC5CJ,OAAO,CAACK,GAAG,CAAC,WAAW,EAAEH,SAAS,EAAE;IAAEI,OAAO,EAAE;EAAE,CAAC,CAAC,CAAC,CAAC;AACzD,CAAC;AACD,OAAO,MAAMC,eAAe,GAAIC,UAAU,IAAK;EAC3C,MAAMC,WAAW,GAAGT,OAAO,CAACU,GAAG,CAACF,UAAU,CAAC;EAE3C,IAAI,CAACC,WAAW,EAAE;IACd;IACA,OAAO,IAAI;EACf;EAEA,MAAME,UAAU,GAAG,IAAIR,IAAI,CAACM,WAAW,CAAC;EACxC,MAAMG,GAAG,GAAG,IAAIT,IAAI,CAAC,CAAC;EAEtB,MAAMU,gBAAgB,GAAGD,GAAG,GAAGD,UAAU;EAEzC,MAAMG,SAAS,GAAGD,gBAAgB,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;EAErD,IAAIC,SAAS,GAAG,CAAC,EAAC;IACd;EAAA;AAER,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}