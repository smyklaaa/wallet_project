{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"getSelector\"],\n  _excluded2 = [\"colorSchemes\", \"components\", \"defaultColorScheme\"];\nimport deepmerge from '@mui/utils/deepmerge';\nimport cssVarsParser from './cssVarsParser';\nfunction prepareCssVars(theme) {\n  let _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let {\n      getSelector\n    } = _ref,\n    parserConfig = _objectWithoutPropertiesLoose(_ref, _excluded);\n  // @ts-ignore - ignore components do not exist\n  const {\n      colorSchemes = {},\n      defaultColorScheme = 'light'\n    } = theme,\n    otherTheme = _objectWithoutPropertiesLoose(theme, _excluded2);\n  const {\n    vars: rootVars,\n    css: rootCss,\n    varsWithDefaults: rootVarsWithDefaults\n  } = cssVarsParser(otherTheme, parserConfig);\n  let themeVars = rootVarsWithDefaults;\n  const colorSchemesMap = {};\n  const {\n      [defaultColorScheme]: defaultScheme\n    } = colorSchemes,\n    otherColorSchemes = _objectWithoutPropertiesLoose(colorSchemes, [defaultColorScheme].map(_toPropertyKey));\n  Object.entries(otherColorSchemes || {}).forEach(_ref2 => {\n    let [key, scheme] = _ref2;\n    const {\n      vars,\n      css,\n      varsWithDefaults\n    } = cssVarsParser(scheme, parserConfig);\n    themeVars = deepmerge(themeVars, varsWithDefaults);\n    colorSchemesMap[key] = {\n      css,\n      vars\n    };\n  });\n  if (defaultScheme) {\n    // default color scheme vars should be merged last to set as default\n    const {\n      css,\n      vars,\n      varsWithDefaults\n    } = cssVarsParser(defaultScheme, parserConfig);\n    themeVars = deepmerge(themeVars, varsWithDefaults);\n    colorSchemesMap[defaultColorScheme] = {\n      css,\n      vars\n    };\n  }\n  const generateThemeVars = () => {\n    let vars = _extends({}, rootVars);\n    Object.entries(colorSchemesMap).forEach(_ref3 => {\n      let [, {\n        vars: schemeVars\n      }] = _ref3;\n      vars = deepmerge(vars, schemeVars);\n    });\n    return vars;\n  };\n  const generateStyleSheets = () => {\n    const stylesheets = [];\n    const colorScheme = theme.defaultColorScheme || 'light';\n    function insertStyleSheet(selector, css) {\n      if (Object.keys(css).length) {\n        stylesheets.push(typeof selector === 'string' ? {\n          [selector]: _extends({}, css)\n        } : selector);\n      }\n    }\n    insertStyleSheet((getSelector === null || getSelector === void 0 ? void 0 : getSelector(undefined, _extends({}, rootCss))) || ':root', rootCss);\n    const {\n        [colorScheme]: defaultSchemeVal\n      } = colorSchemesMap,\n      rest = _objectWithoutPropertiesLoose(colorSchemesMap, [colorScheme].map(_toPropertyKey));\n    if (defaultSchemeVal) {\n      // default color scheme has to come before other color schemes\n      const {\n        css\n      } = defaultSchemeVal;\n      insertStyleSheet((getSelector === null || getSelector === void 0 ? void 0 : getSelector(colorScheme, _extends({}, css))) || \"[\".concat(theme.attribute || 'data-color-scheme', \"=\\\"\").concat(colorScheme, \"\\\"]\"), css);\n    }\n    Object.entries(rest).forEach(_ref4 => {\n      let [key, {\n        css\n      }] = _ref4;\n      insertStyleSheet((getSelector === null || getSelector === void 0 ? void 0 : getSelector(key, _extends({}, css))) || \"[\".concat(theme.attribute || 'data-color-scheme', \"=\\\"\").concat(key, \"\\\"]\"), css);\n    });\n    return stylesheets;\n  };\n  return {\n    vars: themeVars,\n    generateThemeVars,\n    generateStyleSheets\n  };\n}\nexport default prepareCssVars;","map":{"version":3,"names":["_extends","_toPropertyKey","_objectWithoutPropertiesLoose","_excluded","_excluded2","deepmerge","cssVarsParser","prepareCssVars","theme","_ref","arguments","length","undefined","getSelector","parserConfig","colorSchemes","defaultColorScheme","otherTheme","vars","rootVars","css","rootCss","varsWithDefaults","rootVarsWithDefaults","themeVars","colorSchemesMap","defaultScheme","otherColorSchemes","map","Object","entries","forEach","_ref2","key","scheme","generateThemeVars","_ref3","schemeVars","generateStyleSheets","stylesheets","colorScheme","insertStyleSheet","selector","keys","push","defaultSchemeVal","rest","concat","attribute","_ref4"],"sources":["C:/Users/Bebe/Documents/GitHub/wallet_project/wallet_frontend/node_modules/@mui/system/cssVars/prepareCssVars.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"getSelector\"],\n  _excluded2 = [\"colorSchemes\", \"components\", \"defaultColorScheme\"];\nimport deepmerge from '@mui/utils/deepmerge';\nimport cssVarsParser from './cssVarsParser';\nfunction prepareCssVars(theme, _ref = {}) {\n  let {\n      getSelector\n    } = _ref,\n    parserConfig = _objectWithoutPropertiesLoose(_ref, _excluded);\n  // @ts-ignore - ignore components do not exist\n  const {\n      colorSchemes = {},\n      defaultColorScheme = 'light'\n    } = theme,\n    otherTheme = _objectWithoutPropertiesLoose(theme, _excluded2);\n  const {\n    vars: rootVars,\n    css: rootCss,\n    varsWithDefaults: rootVarsWithDefaults\n  } = cssVarsParser(otherTheme, parserConfig);\n  let themeVars = rootVarsWithDefaults;\n  const colorSchemesMap = {};\n  const {\n      [defaultColorScheme]: defaultScheme\n    } = colorSchemes,\n    otherColorSchemes = _objectWithoutPropertiesLoose(colorSchemes, [defaultColorScheme].map(_toPropertyKey));\n  Object.entries(otherColorSchemes || {}).forEach(([key, scheme]) => {\n    const {\n      vars,\n      css,\n      varsWithDefaults\n    } = cssVarsParser(scheme, parserConfig);\n    themeVars = deepmerge(themeVars, varsWithDefaults);\n    colorSchemesMap[key] = {\n      css,\n      vars\n    };\n  });\n  if (defaultScheme) {\n    // default color scheme vars should be merged last to set as default\n    const {\n      css,\n      vars,\n      varsWithDefaults\n    } = cssVarsParser(defaultScheme, parserConfig);\n    themeVars = deepmerge(themeVars, varsWithDefaults);\n    colorSchemesMap[defaultColorScheme] = {\n      css,\n      vars\n    };\n  }\n  const generateThemeVars = () => {\n    let vars = _extends({}, rootVars);\n    Object.entries(colorSchemesMap).forEach(([, {\n      vars: schemeVars\n    }]) => {\n      vars = deepmerge(vars, schemeVars);\n    });\n    return vars;\n  };\n  const generateStyleSheets = () => {\n    const stylesheets = [];\n    const colorScheme = theme.defaultColorScheme || 'light';\n    function insertStyleSheet(selector, css) {\n      if (Object.keys(css).length) {\n        stylesheets.push(typeof selector === 'string' ? {\n          [selector]: _extends({}, css)\n        } : selector);\n      }\n    }\n    insertStyleSheet(getSelector?.(undefined, _extends({}, rootCss)) || ':root', rootCss);\n    const {\n        [colorScheme]: defaultSchemeVal\n      } = colorSchemesMap,\n      rest = _objectWithoutPropertiesLoose(colorSchemesMap, [colorScheme].map(_toPropertyKey));\n    if (defaultSchemeVal) {\n      // default color scheme has to come before other color schemes\n      const {\n        css\n      } = defaultSchemeVal;\n      insertStyleSheet(getSelector?.(colorScheme, _extends({}, css)) || `[${theme.attribute || 'data-color-scheme'}=\"${colorScheme}\"]`, css);\n    }\n    Object.entries(rest).forEach(([key, {\n      css\n    }]) => {\n      insertStyleSheet(getSelector?.(key, _extends({}, css)) || `[${theme.attribute || 'data-color-scheme'}=\"${key}\"]`, css);\n    });\n    return stylesheets;\n  };\n  return {\n    vars: themeVars,\n    generateThemeVars,\n    generateStyleSheets\n  };\n}\nexport default prepareCssVars;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}