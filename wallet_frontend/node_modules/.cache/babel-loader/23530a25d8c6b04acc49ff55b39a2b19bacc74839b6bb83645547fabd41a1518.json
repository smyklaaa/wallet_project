{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bebe\\\\Documents\\\\GitHub\\\\wallet_project\\\\wallet_frontend\\\\src\\\\ExpensePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Table, TableHead, TableBody, TableRow, TableCell, TextField } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ExpenseTable() {\n  _s();\n  const [expenses, setExpenses] = useState([]);\n  const [filters, setFilters] = useState({\n    userId: 1,\n    type: '',\n    operationType: '',\n    startDate: '',\n    endDate: ''\n  });\n  useEffect(() => {\n    const fetchExpenses = async () => {\n      try {\n        // Remove empty values before constructing the query string\n        const queryParams = Object.fromEntries(Object.entries(filters).filter(([key, value]) => value !== ''));\n        const params = new URLSearchParams(queryParams).toString();\n        const response = await fetch(`http://127.0.0.1:8080/expense/filter?${params}`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (!response.ok) {\n          throw new Error('Failed to fetch expenses');\n        }\n        const data = await response.json();\n        setExpenses(data);\n      } catch (error) {\n        console.error('Error fetching expenses:', error);\n      }\n    };\n    fetchExpenses();\n  }, [filters]);\n  const handleFilterChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFilters(prevFilters => ({\n      ...prevFilters,\n      [name]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      name: \"userId\",\n      label: \"User ID\",\n      value: filters.userId,\n      onChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      name: \"type\",\n      label: \"Type\",\n      value: filters.type,\n      onChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      name: \"operationType\",\n      label: \"Operation Type\",\n      value: filters.operationType,\n      onChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      name: \"startDate\",\n      label: \"Start Date\",\n      type: \"date\",\n      value: filters.startDate,\n      onChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      name: \"endDate\",\n      label: \"End Date\",\n      type: \"date\",\n      value: filters.endDate,\n      onChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"User ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Operation Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: expenses.map(expense => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: expense.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: expense.userId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: expense.amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: expense.operationType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: expense.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: expense.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }, this)]\n        }, expense.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s(ExpenseTable, \"jxqV9wZualGXDVpo8fUA2xqGB3I=\");\n_c = ExpenseTable;\nexport default ExpenseTable;\nvar _c;\n$RefreshReg$(_c, \"ExpenseTable\");","map":{"version":3,"names":["React","useState","useEffect","Table","TableHead","TableBody","TableRow","TableCell","TextField","jsxDEV","_jsxDEV","ExpenseTable","_s","expenses","setExpenses","filters","setFilters","userId","type","operationType","startDate","endDate","fetchExpenses","queryParams","Object","fromEntries","entries","filter","key","value","params","URLSearchParams","toString","response","fetch","method","headers","ok","Error","data","json","error","console","handleFilterChange","e","name","target","prevFilters","children","label","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","expense","id","amount","date","_c","$RefreshReg$"],"sources":["C:/Users/Bebe/Documents/GitHub/wallet_project/wallet_frontend/src/ExpensePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Table, TableHead, TableBody, TableRow, TableCell, TextField } from '@material-ui/core';\r\n\r\nfunction ExpenseTable() {\r\n    const [expenses, setExpenses] = useState([]);\r\n    const [filters, setFilters] = useState({\r\n        userId: 1,\r\n        type: '',\r\n        operationType: '',\r\n        startDate: '',\r\n        endDate: ''\r\n    });\r\n\r\n    useEffect(() => {\r\n        const fetchExpenses = async () => {\r\n            try {\r\n                // Remove empty values before constructing the query string\r\n                const queryParams = Object.fromEntries(\r\n                    Object.entries(filters).filter(([key, value]) => value !== '')\r\n                );\r\n                const params = new URLSearchParams(queryParams).toString();\r\n\r\n                const response = await fetch(`http://127.0.0.1:8080/expense/filter?${params}`, {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n                });\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch expenses');\r\n                }\r\n                const data = await response.json();\r\n                setExpenses(data);\r\n            } catch (error) {\r\n                console.error('Error fetching expenses:', error);\r\n            }\r\n        };\r\n\r\n        fetchExpenses();\r\n    }, [filters]);\r\n\r\n    const handleFilterChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFilters(prevFilters => ({\r\n            ...prevFilters,\r\n            [name]: value\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <TextField\r\n                name=\"userId\"\r\n                label=\"User ID\"\r\n                value={filters.userId}\r\n                onChange={handleFilterChange}\r\n            />\r\n            <TextField\r\n                name=\"type\"\r\n                label=\"Type\"\r\n                value={filters.type}\r\n                onChange={handleFilterChange}\r\n            />\r\n            <TextField\r\n                name=\"operationType\"\r\n                label=\"Operation Type\"\r\n                value={filters.operationType}\r\n                onChange={handleFilterChange}\r\n            />\r\n            <TextField\r\n                name=\"startDate\"\r\n                label=\"Start Date\"\r\n                type=\"date\"\r\n                value={filters.startDate}\r\n                onChange={handleFilterChange}\r\n            />\r\n            <TextField\r\n                name=\"endDate\"\r\n                label=\"End Date\"\r\n                type=\"date\"\r\n                value={filters.endDate}\r\n                onChange={handleFilterChange}\r\n            />\r\n            <Table>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>ID</TableCell>\r\n                        <TableCell>User ID</TableCell>\r\n                        <TableCell>Amount</TableCell>\r\n                        <TableCell>Operation Type</TableCell>\r\n                        <TableCell>Type</TableCell>\r\n                        <TableCell>Date</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {expenses.map(expense => (\r\n                        <TableRow key={expense.id}>\r\n                            <TableCell>{expense.id}</TableCell>\r\n                            <TableCell>{expense.userId}</TableCell>\r\n                            <TableCell>{expense.amount}</TableCell>\r\n                            <TableCell>{expense.operationType}</TableCell>\r\n                            <TableCell>{expense.type}</TableCell>\r\n                            <TableCell>{expense.date}</TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExpenseTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}