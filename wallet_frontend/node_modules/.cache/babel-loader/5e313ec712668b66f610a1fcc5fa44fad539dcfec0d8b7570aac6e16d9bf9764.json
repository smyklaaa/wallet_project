{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Table,TableHead,TableBody,TableRow,TableCell,TextField}from'@material-ui/core';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ExpenseTable(){const[expenses,setExpenses]=useState([]);const[filteredExpenses,setFilteredExpenses]=useState([]);const[filters,setFilters]=useState({userId:'',type:'',startDate:'',endDate:''});useEffect(()=>{// Fetch expenses from backend API and setExpenses\nfetchExpenses().then(data=>setExpenses(data));},[]);useEffect(()=>{// Apply filters to expenses and update filteredExpenses\nconst filtered=expenses.filter(expense=>{// Implement your filter logic here\n// Example:\nreturn(!filters.userId||expense.userId===parseInt(filters.userId))&&(!filters.type||expense.type===filters.type)&&(!filters.startDate||new Date(expense.date)>=new Date(filters.startDate))&&(!filters.endDate||new Date(expense.date)<=new Date(filters.endDate));});setFilteredExpenses(filtered);},[expenses,filters]);const handleFilterChange=e=>{const{name,value}=e.target;setFilters(prevFilters=>({...prevFilters,[name]:value}));};// Fetch expenses from the backend\nconst fetchExpenses=async()=>{try{const response=await fetch('/filter');if(!response.ok){throw new Error('Failed to fetch expenses');}const data=await response.json();return data;}catch(error){console.error('Error fetching expenses:',error);return[];}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(TextField,{name:\"userId\",label:\"User ID\",value:filters.userId,onChange:handleFilterChange}),/*#__PURE__*/_jsx(TextField,{name:\"type\",label:\"Type\",value:filters.type,onChange:handleFilterChange}),/*#__PURE__*/_jsx(TextField,{name:\"startDate\",label:\"Start Date\",type:\"date\",value:filters.startDate,onChange:handleFilterChange}),/*#__PURE__*/_jsx(TextField,{name:\"endDate\",label:\"End Date\",type:\"date\",value:filters.endDate,onChange:handleFilterChange}),/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"ID\"}),/*#__PURE__*/_jsx(TableCell,{children:\"User ID\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Amount\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Operation Type\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Type\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Date\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:filteredExpenses.map(expense=>/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:expense.id}),/*#__PURE__*/_jsx(TableCell,{children:expense.userId}),/*#__PURE__*/_jsx(TableCell,{children:expense.amount}),/*#__PURE__*/_jsx(TableCell,{children:expense.operationType}),/*#__PURE__*/_jsx(TableCell,{children:expense.type}),/*#__PURE__*/_jsx(TableCell,{children:expense.date})]},expense.id))})]})]});}export default ExpenseTable;","map":{"version":3,"names":["React","useState","useEffect","Table","TableHead","TableBody","TableRow","TableCell","TextField","jsx","_jsx","jsxs","_jsxs","ExpenseTable","expenses","setExpenses","filteredExpenses","setFilteredExpenses","filters","setFilters","userId","type","startDate","endDate","fetchExpenses","then","data","filtered","filter","expense","parseInt","Date","date","handleFilterChange","e","name","value","target","prevFilters","response","fetch","ok","Error","json","error","console","children","label","onChange","map","id","amount","operationType"],"sources":["C:/Users/Bebe/Documents/GitHub/wallet_project/wallet_frontend/src/ExpensePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Table, TableHead, TableBody, TableRow, TableCell, TextField } from '@material-ui/core';\r\n\r\nfunction ExpenseTable() {\r\n    const [expenses, setExpenses] = useState([]);\r\n    const [filteredExpenses, setFilteredExpenses] = useState([]);\r\n    const [filters, setFilters] = useState({\r\n        userId: '',\r\n        type: '',\r\n        startDate: '',\r\n        endDate: ''\r\n    });\r\n\r\n    useEffect(() => {\r\n        // Fetch expenses from backend API and setExpenses\r\n        fetchExpenses().then(data => setExpenses(data));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // Apply filters to expenses and update filteredExpenses\r\n        const filtered = expenses.filter(expense => {\r\n            // Implement your filter logic here\r\n            // Example:\r\n            return (\r\n                (!filters.userId || expense.userId === parseInt(filters.userId)) &&\r\n                (!filters.type || expense.type === filters.type) &&\r\n                (!filters.startDate || new Date(expense.date) >= new Date(filters.startDate)) &&\r\n                (!filters.endDate || new Date(expense.date) <= new Date(filters.endDate))\r\n            );\r\n        });\r\n        setFilteredExpenses(filtered);\r\n    }, [expenses, filters]);\r\n\r\n    const handleFilterChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFilters(prevFilters => ({\r\n            ...prevFilters,\r\n            [name]: value\r\n        }));\r\n    };\r\n\r\n    // Fetch expenses from the backend\r\n    const fetchExpenses = async () => {\r\n        try {\r\n            const response = await fetch('/filter');\r\n            if (!response.ok) {\r\n                throw new Error('Failed to fetch expenses');\r\n            }\r\n            const data = await response.json();\r\n            return data;\r\n        } catch (error) {\r\n            console.error('Error fetching expenses:', error);\r\n            return [];\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <TextField\r\n                name=\"userId\"\r\n                label=\"User ID\"\r\n                value={filters.userId}\r\n                onChange={handleFilterChange}\r\n            />\r\n            <TextField\r\n                name=\"type\"\r\n                label=\"Type\"\r\n                value={filters.type}\r\n                onChange={handleFilterChange}\r\n            />\r\n            <TextField\r\n                name=\"startDate\"\r\n                label=\"Start Date\"\r\n                type=\"date\"\r\n                value={filters.startDate}\r\n                onChange={handleFilterChange}\r\n            />\r\n            <TextField\r\n                name=\"endDate\"\r\n                label=\"End Date\"\r\n                type=\"date\"\r\n                value={filters.endDate}\r\n                onChange={handleFilterChange}\r\n            />\r\n            <Table>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>ID</TableCell>\r\n                        <TableCell>User ID</TableCell>\r\n                        <TableCell>Amount</TableCell>\r\n                        <TableCell>Operation Type</TableCell>\r\n                        <TableCell>Type</TableCell>\r\n                        <TableCell>Date</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {filteredExpenses.map(expense => (\r\n                        <TableRow key={expense.id}>\r\n                            <TableCell>{expense.id}</TableCell>\r\n                            <TableCell>{expense.userId}</TableCell>\r\n                            <TableCell>{expense.amount}</TableCell>\r\n                            <TableCell>{expense.operationType}</TableCell>\r\n                            <TableCell>{expense.type}</TableCell>\r\n                            <TableCell>{expense.date}</TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExpenseTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}