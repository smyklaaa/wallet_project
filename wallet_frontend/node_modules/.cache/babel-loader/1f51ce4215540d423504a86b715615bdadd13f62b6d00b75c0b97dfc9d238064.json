{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bebe\\\\Documents\\\\GitHub\\\\wallet_project\\\\wallet_frontend\\\\src\\\\ExpensePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Table, TableHead, TableBody, TableRow, TableCell, TextField } from '@material-ui/core';\nimport debounce from 'lodash.debounce';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ExpenseTable() {\n  _s();\n  const [expenses, setExpenses] = useState([]);\n  const [filters, setFilters] = useState({\n    userId: '',\n    type: '',\n    operationType: '',\n    startDate: '',\n    endDate: ''\n  });\n  const fetchExpenses = async filters => {\n    try {\n      const queryParams = Object.fromEntries(Object.entries(filters).filter(([key, value]) => value));\n      const params = new URLSearchParams(queryParams).toString();\n      const response = await fetch(`http://127.0.0.1:8080/expense/filter?${params}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch expenses');\n      }\n      const data = await response.json();\n      setExpenses(data);\n    } catch (error) {\n      console.error('Error fetching expenses:', error);\n    }\n  };\n\n  // Debounce the fetchExpenses function to avoid frequent calls\n  const debouncedFetchExpenses = useCallback(debounce(filters => fetchExpenses(filters), 300), []);\n  useEffect(() => {\n    debouncedFetchExpenses(filters);\n  }, [filters, debouncedFetchExpenses]);\n  const handleFilterChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFilters(prevFilters => ({\n      ...prevFilters,\n      [name]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      name: \"userId\",\n      label: \"User ID\",\n      value: filters.userId,\n      onChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      name: \"type\",\n      label: \"Type\",\n      value: filters.type,\n      onChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      name: \"operationType\",\n      label: \"Operation Type\",\n      value: filters.operationType,\n      onChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      name: \"startDate\",\n      label: \"Start Date\",\n      type: \"date\",\n      value: filters.startDate,\n      onChange: handleFilterChange,\n      InputLabelProps: {\n        shrink: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      name: \"endDate\",\n      label: \"End Date\",\n      type: \"date\",\n      value: filters.endDate,\n      onChange: handleFilterChange,\n      InputLabelProps: {\n        shrink: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"User ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Operation Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: expenses.map(expense => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: expense.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: expense.userId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: expense.amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: expense.operationType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: expense.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: expense.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 29\n          }, this)]\n        }, expense.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(ExpenseTable, \"a4oyjQ0IbY4eQwd5OVi0CtXu0ZU=\");\n_c = ExpenseTable;\nexport default ExpenseTable;\nvar _c;\n$RefreshReg$(_c, \"ExpenseTable\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Table","TableHead","TableBody","TableRow","TableCell","TextField","debounce","jsxDEV","_jsxDEV","ExpenseTable","_s","expenses","setExpenses","filters","setFilters","userId","type","operationType","startDate","endDate","fetchExpenses","queryParams","Object","fromEntries","entries","filter","key","value","params","URLSearchParams","toString","response","fetch","method","headers","ok","Error","data","json","error","console","debouncedFetchExpenses","handleFilterChange","e","name","target","prevFilters","children","label","onChange","fileName","_jsxFileName","lineNumber","columnNumber","InputLabelProps","shrink","map","expense","id","amount","date","_c","$RefreshReg$"],"sources":["C:/Users/Bebe/Documents/GitHub/wallet_project/wallet_frontend/src/ExpensePage.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Table, TableHead, TableBody, TableRow, TableCell, TextField } from '@material-ui/core';\r\nimport debounce from 'lodash.debounce';\r\n\r\nfunction ExpenseTable() {\r\n    const [expenses, setExpenses] = useState([]);\r\n    const [filters, setFilters] = useState({\r\n        userId: '',\r\n        type: '',\r\n        operationType: '',\r\n        startDate: '',\r\n        endDate: ''\r\n    });\r\n\r\n    const fetchExpenses = async (filters) => {\r\n        try {\r\n            const queryParams = Object.fromEntries(\r\n                Object.entries(filters).filter(([key, value]) => value)\r\n            );\r\n            const params = new URLSearchParams(queryParams).toString();\r\n            const response = await fetch(`http://127.0.0.1:8080/expense/filter?${params}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            });\r\n            if (!response.ok) {\r\n                throw new Error('Failed to fetch expenses');\r\n            }\r\n            const data = await response.json();\r\n            setExpenses(data);\r\n        } catch (error) {\r\n            console.error('Error fetching expenses:', error);\r\n        }\r\n    };\r\n\r\n    // Debounce the fetchExpenses function to avoid frequent calls\r\n    const debouncedFetchExpenses = useCallback(\r\n        debounce((filters) => fetchExpenses(filters), 300),\r\n        []\r\n    );\r\n\r\n    useEffect(() => {\r\n        debouncedFetchExpenses(filters);\r\n    }, [filters, debouncedFetchExpenses]);\r\n\r\n    const handleFilterChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFilters(prevFilters => ({\r\n            ...prevFilters,\r\n            [name]: value\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <TextField\r\n                name=\"userId\"\r\n                label=\"User ID\"\r\n                value={filters.userId}\r\n                onChange={handleFilterChange}\r\n            />\r\n            <TextField\r\n                name=\"type\"\r\n                label=\"Type\"\r\n                value={filters.type}\r\n                onChange={handleFilterChange}\r\n            />\r\n            <TextField\r\n                name=\"operationType\"\r\n                label=\"Operation Type\"\r\n                value={filters.operationType}\r\n                onChange={handleFilterChange}\r\n            />\r\n            <TextField\r\n                name=\"startDate\"\r\n                label=\"Start Date\"\r\n                type=\"date\"\r\n                value={filters.startDate}\r\n                onChange={handleFilterChange}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n            <TextField\r\n                name=\"endDate\"\r\n                label=\"End Date\"\r\n                type=\"date\"\r\n                value={filters.endDate}\r\n                onChange={handleFilterChange}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n            <Table>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>ID</TableCell>\r\n                        <TableCell>User ID</TableCell>\r\n                        <TableCell>Amount</TableCell>\r\n                        <TableCell>Operation Type</TableCell>\r\n                        <TableCell>Type</TableCell>\r\n                        <TableCell>Date</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {expenses.map(expense => (\r\n                        <TableRow key={expense.id}>\r\n                            <TableCell>{expense.id}</TableCell>\r\n                            <TableCell>{expense.userId}</TableCell>\r\n                            <TableCell>{expense.amount}</TableCell>\r\n                            <TableCell>{expense.operationType}</TableCell>\r\n                            <TableCell>{expense.type}</TableCell>\r\n                            <TableCell>{expense.date}</TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExpenseTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}