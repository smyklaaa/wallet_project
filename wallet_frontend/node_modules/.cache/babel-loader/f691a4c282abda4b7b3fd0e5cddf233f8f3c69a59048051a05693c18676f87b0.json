{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bebe\\\\Documents\\\\GitHub\\\\wallet_project\\\\wallet_frontend\\\\src\\\\ExpensePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Table, TableHead, TableBody, TableRow, TableCell, TextField } from '@material-ui/core';\n;\nimport { CssVarsProvider, useColorScheme } from '@mui/joy/styles';\nimport Sheet from '@mui/joy/Sheet';\nimport Typography from '@mui/joy/Typography';\nimport FormControl from '@mui/joy/FormControl';\nimport FormLabel from '@mui/joy/FormLabel';\nimport Input from '@mui/joy/Input';\nimport Button from '@mui/joy/Button';\nimport Link from '@mui/joy/Link';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ExpenseTable() {\n  _s();\n  const [expenses, setExpenses] = useState([]);\n  const [filteredExpenses, setFilteredExpenses] = useState([]);\n  const [filters, setFilters] = useState({\n    userId: '',\n    type: '',\n    startDate: '',\n    endDate: ''\n  });\n  useEffect(() => {\n    fetchExpenses().then(data => setExpenses(data));\n  }, []);\n  useEffect(() => {\n    // Apply filters to expenses and update filteredExpenses\n    const filtered = expenses.filter(expense => {\n      // Implement your filter logic here\n      // Example:\n      return (!filters.userId || expense.userId === filters.userId) && (!filters.type || expense.type === filters.type) && (!filters.startDate || new Date(expense.date) >= new Date(filters.startDate)) && (!filters.endDate || new Date(expense.date) <= new Date(filters.endDate));\n    });\n    setFilteredExpenses(filtered);\n  }, [expenses, filters]);\n  const handleFilterChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFilters(prevFilters => ({\n      ...prevFilters,\n      [name]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      name: \"userId\",\n      label: \"User ID\",\n      value: filters.userId,\n      onChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      name: \"type\",\n      label: \"Type\",\n      value: filters.type,\n      onChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      name: \"startDate\",\n      label: \"Start Date\",\n      type: \"date\",\n      value: filters.startDate,\n      onChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      name: \"endDate\",\n      label: \"End Date\",\n      type: \"date\",\n      value: filters.endDate,\n      onChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"User ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Operation Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: expense.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: expense.userId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: expense.amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: expense.operationType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: expense.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: expense.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, this)]\n        }, expense.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s(ExpenseTable, \"jBrPhiHDgGUmHHlbe3oMtbrN1cY=\");\n_c = ExpenseTable;\nexport default ExpenseTable;\nvar _c;\n$RefreshReg$(_c, \"ExpenseTable\");","map":{"version":3,"names":["React","useState","useEffect","Table","TableHead","TableBody","TableRow","TableCell","TextField","CssVarsProvider","useColorScheme","Sheet","Typography","FormControl","FormLabel","Input","Button","Link","jsxDEV","_jsxDEV","ExpenseTable","_s","expenses","setExpenses","filteredExpenses","setFilteredExpenses","filters","setFilters","userId","type","startDate","endDate","fetchExpenses","then","data","filtered","filter","expense","Date","date","handleFilterChange","e","name","value","target","prevFilters","children","label","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","id","amount","operationType","_c","$RefreshReg$"],"sources":["C:/Users/Bebe/Documents/GitHub/wallet_project/wallet_frontend/src/ExpensePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Table, TableHead, TableBody, TableRow, TableCell, TextField } from '@material-ui/core';;\r\nimport { CssVarsProvider, useColorScheme } from '@mui/joy/styles';\r\nimport Sheet from '@mui/joy/Sheet';\r\nimport Typography from '@mui/joy/Typography';\r\nimport FormControl from '@mui/joy/FormControl';\r\nimport FormLabel from '@mui/joy/FormLabel';\r\nimport Input from '@mui/joy/Input';\r\nimport Button from '@mui/joy/Button';\r\nimport Link from '@mui/joy/Link';\r\n\r\n\r\nfunction ExpenseTable() {\r\n    const [expenses, setExpenses] = useState([]);\r\n    const [filteredExpenses, setFilteredExpenses] = useState([]);\r\n    const [filters, setFilters] = useState({\r\n        userId: '',\r\n        type: '',\r\n        startDate: '',\r\n        endDate: ''\r\n    });\r\n\r\n    useEffect(() => {\r\n        fetchExpenses().then(data => setExpenses(data));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // Apply filters to expenses and update filteredExpenses\r\n        const filtered = expenses.filter(expense => {\r\n            // Implement your filter logic here\r\n            // Example:\r\n            return (\r\n                (!filters.userId || expense.userId === filters.userId) &&\r\n                (!filters.type || expense.type === filters.type) &&\r\n                (!filters.startDate || new Date(expense.date) >= new Date(filters.startDate)) &&\r\n                (!filters.endDate || new Date(expense.date) <= new Date(filters.endDate))\r\n            );\r\n        });\r\n        setFilteredExpenses(filtered);\r\n    }, [expenses, filters]);\r\n\r\n    const handleFilterChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFilters(prevFilters => ({\r\n            ...prevFilters,\r\n            [name]: value\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <TextField\r\n                name=\"userId\"\r\n                label=\"User ID\"\r\n                value={filters.userId}\r\n                onChange={handleFilterChange}\r\n            />\r\n            <TextField\r\n                name=\"type\"\r\n                label=\"Type\"\r\n                value={filters.type}\r\n                onChange={handleFilterChange}\r\n            />\r\n            <TextField\r\n                name=\"startDate\"\r\n                label=\"Start Date\"\r\n                type=\"date\"\r\n                value={filters.startDate}\r\n                onChange={handleFilterChange}\r\n            />\r\n            <TextField\r\n                name=\"endDate\"\r\n                label=\"End Date\"\r\n                type=\"date\"\r\n                value={filters.endDate}\r\n                onChange={handleFilterChange}\r\n            />\r\n            <Table>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>ID</TableCell>\r\n                        <TableCell>User ID</TableCell>\r\n                        <TableCell>Amount</TableCell>\r\n                        <TableCell>Operation Type</TableCell>\r\n                        <TableCell>Type</TableCell>\r\n                        <TableCell>Date</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {filteredExpenses.map(expense => (\r\n                        <TableRow key={expense.id}>\r\n                            <TableCell>{expense.id}</TableCell>\r\n                            <TableCell>{expense.userId}</TableCell>\r\n                            <TableCell>{expense.amount}</TableCell>\r\n                            <TableCell>{expense.operationType}</TableCell>\r\n                            <TableCell>{expense.type}</TableCell>\r\n                            <TableCell>{expense.date}</TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExpenseTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}